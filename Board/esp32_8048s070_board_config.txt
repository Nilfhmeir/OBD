/*
 * ESP32-8048S070 Board Configuration - 7" RGB Display Board
 * This is the actual board configuration for ESP32-8048S070
 */

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

// ================================================
// BOARD IDENTIFICATION
// ================================================
#define BOARD_NAME                  "ESP32-8048S070"
#define BOARD_DISPLAY_NAME          "ESP32-S3 7inch RGB Display Board"
#define BOARD_MCU                   "ESP32-S3-WROOM-1"
#define BOARD_DISPLAY_CONTROLLER    "ST7262"  // Actual controller on this board
#define BOARD_DISPLAY_INTERFACE     "RGB565"
#define BOARD_DISPLAY_SIZE          "7.0inch"
#define BOARD_RESOLUTION_STR        "800x480"

// ================================================
// Display Configuration (RGB Parallel Interface)
// ================================================

// Display Resolution
#define BOARD_LCD_H_RES         800
#define BOARD_LCD_V_RES         480
#define BOARD_LCD_PIXEL_CLOCK   16000000  // 16MHz pixel clock

// RGB Data Pins (15-bit configuration - GPIO20 used for USB)
#define BOARD_LCD_RGB_DATA_WIDTH    15  // Reduced from 16 for USB compatibility

// RGB Data Pins - ESP32-8048S070 with USB support
#define BOARD_LCD_RGB_PIN_R0        11  // Red[0]
#define BOARD_LCD_RGB_PIN_R1        12  // Red[1] 
#define BOARD_LCD_RGB_PIN_R2        13  // Red[2]
#define BOARD_LCD_RGB_PIN_R3        14  // Red[3]
#define BOARD_LCD_RGB_PIN_R4        0   // Red[4]

#define BOARD_LCD_RGB_PIN_G0        8   // Green[0]
// GPIO20 sacrificed for USB D+ - was Green[1]
#define BOARD_LCD_RGB_PIN_G2        3   // Green[2] 
#define BOARD_LCD_RGB_PIN_G3        46  // Green[3]
#define BOARD_LCD_RGB_PIN_G4        9   // Green[4]
#define BOARD_LCD_RGB_PIN_G5        10  // Green[5]

#define BOARD_LCD_RGB_PIN_B0        4   // Blue[0]
#define BOARD_LCD_RGB_PIN_B1        5   // Blue[1]
#define BOARD_LCD_RGB_PIN_B2        6   // Blue[2]
#define BOARD_LCD_RGB_PIN_B3        7   // Blue[3]
#define BOARD_LCD_RGB_PIN_B4        15  // Blue[4]

// RGB Control Pins - ESP32-8048S070 specific
#define BOARD_LCD_RGB_PIN_HSYNC     39  // Horizontal sync
#define BOARD_LCD_RGB_PIN_VSYNC     40  // Vertical sync
#define BOARD_LCD_RGB_PIN_DE        38  // Data enable
#define BOARD_LCD_RGB_PIN_PCLK      42  // Pixel clock
#define BOARD_LCD_RGB_PIN_DISP      2   // Display enable
#define BOARD_LCD_RGB_PIN_BL        1   // Backlight control

// RGB Timing Parameters (for ST7262 panel)
#define BOARD_LCD_RGB_TIMING_HPW    4    // Horizontal pulse width
#define BOARD_LCD_RGB_TIMING_HBP    8    // Horizontal back porch  
#define BOARD_LCD_RGB_TIMING_HFP    8    // Horizontal front porch
#define BOARD_LCD_RGB_TIMING_VPW    4    // Vertical pulse width
#define BOARD_LCD_RGB_TIMING_VBP    8    // Vertical back porch
#define BOARD_LCD_RGB_TIMING_VFP    8    // Vertical front porch

// ================================================
// Touch Controller Configuration (GT911)
// ================================================

// Touch I2C Configuration
#define BOARD_TOUCH_I2C_SCL         18
#define BOARD_TOUCH_I2C_SDA         17
#define BOARD_TOUCH_I2C_INT         16  // Touch interrupt
#define BOARD_TOUCH_I2C_RST         -1  // Touch reset (connected to EN)

// Touch Controller (GT911 on most ESP32-8048S070 boards)
#define BOARD_TOUCH_CONTROLLER_GT911
#define BOARD_TOUCH_I2C_ADDRESS     0x5D  // GT911 I2C address

// ================================================
// USB Configuration (ESP32-8048S070 specific)
// ================================================

// USB OTG Pins (Native ESP32-S3 USB) - ESP32-8048S070 with RGB sacrifice
#define BOARD_USB_OTG_PIN_DP        20  // USB D+ (GPIO20) - Was RGB G1, now dedicated to USB
#define BOARD_USB_OTG_PIN_DN        19  // USB D- (GPIO19) - Dedicated

// Note: GPIO20 is now dedicated to USB D+
// RGB Green channel has 5 bits instead of 6 (still excellent color quality)

// ================================================
// 24V Vehicle Support Configuration
// ================================================

// Voltage Sensing Pin (available GPIO on ESP32-8048S070)
#define BOARD_VOLTAGE_SENSE_PIN     21  // ADC pin for voltage monitoring
#define BOARD_VOLTAGE_DIVIDER_R1    100000  // 100kΩ upper resistor
#define BOARD_VOLTAGE_DIVIDER_R2    10000   // 10kΩ lower resistor
#define BOARD_VOLTAGE_DIVIDER_RATIO ((float)(BOARD_VOLTAGE_DIVIDER_R1 + BOARD_VOLTAGE_DIVIDER_R2) / BOARD_VOLTAGE_DIVIDER_R2)

// Vehicle Type Detection Thresholds
#define BOARD_VOLTAGE_12V_MIN       10.0f   // Minimum 12V system voltage
#define BOARD_VOLTAGE_12V_MAX       16.0f   // Maximum 12V system voltage
#define BOARD_VOLTAGE_24V_MIN       18.0f   // Minimum 24V system voltage
#define BOARD_VOLTAGE_24V_MAX       32.0f   // Maximum 24V system voltage

// ================================================
// Available GPIOs on ESP32-8048S070 (Updated after USB allocation)
// ================================================

// Available for general use
#define BOARD_GPIO_USER_1           47  // User GPIO 1
#define BOARD_GPIO_USER_2           48  // User GPIO 2  
#define BOARD_GPIO_USER_3           45  // User GPIO 3
#define BOARD_GPIO_USER_4           21  // User GPIO 4 (also voltage sensing)

// Reserved/Used GPIOs (Updated)
// GPIO 0,3-15: RGB data pins (15 pins total)
// GPIO 16: Touch interrupt
// GPIO 17: Touch SDA
// GPIO 18: Touch SCL
// GPIO 19: USB D-
// GPIO 20: USB D+ (Was RGB G1, now USB dedicated)
// GPIO 38: RGB DE
// GPIO 39: RGB HSYNC
// GPIO 40: RGB VSYNC
// GPIO 42: RGB PCLK
// GPIO 1: Backlight PWM
// GPIO 2: Display enable

// GPIO Usage Summary:
// - Total RGB pins: 15 (was 16)
// - Color depth: 15-bit RGB (32,768 colors instead of 65,536)
// - USB Host: Fully functional on GPIO19/20
// - Touch: Fully functional on GPIO16/17/18
// - Available: GPIO21, 45, 47, 48 for expansion

// ================================================
// Memory Configuration
// ================================================

// PSRAM Configuration (8MB on ESP32-8048S070)
#define BOARD_PSRAM_SIZE            (8 * 1024 * 1024)  // 8MB PSRAM
#define BOARD_FRAME_BUFFER_PSRAM    1                  // Use PSRAM for frame buffer

// Flash Configuration (16MB on ESP32-8048S070)
#define BOARD_FLASH_SIZE            (16 * 1024 * 1024) // 16MB Flash

// ================================================
// Board-Specific Display Driver Configuration
// ================================================

// Frame buffer configuration for ESP32-8048S070
#define BOARD_LCD_FRAME_BUF_NUMS    2   // Double buffering
#define BOARD_LCD_BB_SIZE           (BOARD_LCD_H_RES * 100) // Bounce buffer size

// LVGL Configuration for ESP32-8048S070
#define BOARD_LVGL_TICK_PERIOD_MS   2
#define BOARD_LVGL_TASK_MAX_DELAY   500
#define BOARD_LVGL_TASK_MIN_DELAY   1
#define BOARD_LVGL_TASK_STACK_SIZE  (8 * 1024)  // Increased for 7" display
#define BOARD_LVGL_TASK_PRIORITY    2

// ================================================
// USB Host Adapter Support for ESP32-8048S070
// ================================================

// Native USB Host Configuration (GPIO20 conflict resolved)
#define USB_HOST_ENABLED            1
#define USB_NATIVE_PINS_USED        1

// Color Quality Impact Assessment:
// - Original: 16-bit RGB565 (5R + 6G + 5B = 65,536 colors)
// - Modified: 15-bit RGB555 (5R + 5G + 5B = 32,768 colors) 
// - Impact: Slight reduction in green gradients
// - Result: Still excellent for dashboard/automotive UI

// Supported ELM327 USB adapters (confirmed compatible):
typedef struct {
    uint16_t vid;
    uint16_t pid;
    const char* name;
    bool esp32_8048s070_tested;
} usb_elm327_adapter_t;

static const usb_elm327_adapter_t supported_adapters[] = {
    {0x1A86, 0x7523, "CH340 ELM327", true},
    {0x0403, 0x6001, "FTDI ELM327", true},
    {0x10C4, 0xEA60, "CP2102 ELM327", true},
    {0x067B, 0x2303, "PL2303 ELM327", true},
    {0x0483, 0x5740, "STM32 OBD2", false},
    {0x16C0, 0x05DF, "VOTI CAN", false},
    {NULL, 0, NULL, false}
};

#ifdef __cplusplus
}
#endif