/*
 * ESP32-8048S070 RGB Display Driver Header - Enhanced
 * 800x480 RGB555 Parallel Interface (15-bit with USB coexistence)
 */

#pragma once

#include "esp_err.h"
#include "esp_lcd_panel_ops.h"
#include "lvgl.h"
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Initialize 15-bit RGB display panel (USB coexistence mode)
 * 
 * @return esp_err_t ESP_OK on success
 */
esp_err_t display_init(void);

/**
 * @brief Initialize LVGL integration for 15-bit display
 * 
 * @return esp_err_t ESP_OK on success  
 */
esp_err_t display_lvgl_init(void);

/**
 * @brief Set backlight brightness
 * 
 * @param brightness Brightness level (0-255)
 * @return esp_err_t ESP_OK on success
 */
esp_err_t display_backlight_set(uint8_t brightness);

/**
 * @brief Set display brightness (alias for backlight_set)
 * 
 * @param brightness Brightness level (0-255) 
 * @return esp_err_t ESP_OK on success
 */
esp_err_t display_set_brightness(uint8_t brightness);

/**
 * @brief Clear display with specified color
 * 
 * @param color RGB555/RGB565 color value (auto-converted)
 */
void display_clear(uint16_t color);

/**
 * @brief Display test color pattern (15-bit optimized)
 */
void display_test_pattern(void);

/**
 * @brief Test RGB gradients for 15-bit validation
 */
void display_test_rgb_gradients(void);

/**
 * @brief Initialize touch controller (delegated to touch driver)
 * 
 * @return esp_err_t ESP_OK on success
 */
esp_err_t display_touch_init(void);

/**
 * @brief Get LVGL display object
 * 
 * @return lv_disp_t* LVGL display pointer
 */
lv_disp_t* display_get_lvgl_disp(void);

/**
 * @brief Get ESP LCD panel handle
 * 
 * @return esp_lcd_panel_handle_t Panel handle
 */
esp_lcd_panel_handle_t display_get_panel_handle(void);

/**
 * @brief Convert RGB888 to RGB555 format
 * 
 * @param r Red component (0-255)
 * @param g Green component (0-255)
 * @param b Blue component (0-255)
 * @return uint16_t RGB555 color value
 */
uint16_t display_rgb888_to_rgb555(uint8_t r, uint8_t g, uint8_t b);

/**
 * @brief Convert RGB565 to RGB555 format
 * 
 * @param rgb565 RGB565 color value
 * @return uint16_t RGB555 color value
 */
uint16_t display_rgb565_to_rgb555(uint16_t rgb565);

/**
 * @brief Print display performance information
 */
void display_print_performance_info(void);

// Color definitions for 15-bit RGB (RGB555 format)
#define RGB555_BLACK    0x0000
#define RGB555_WHITE    0x7FFF
#define RGB555_RED      0x7C00
#define RGB555_GREEN    0x03E0
#define RGB555_BLUE     0x001F
#define RGB555_YELLOW   0x7FE0
#define RGB555_MAGENTA  0x7C1F
#define RGB555_CYAN     0x03FF

#ifdef __cplusplus
}
#endif