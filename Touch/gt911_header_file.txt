/*
 * GT911 Touch Controller Driver Header for ESP32-8048S070
 * Supports up to 5-point multitouch
 */

#pragma once

#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <stdint.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "driver/i2c.h"
#include "driver/gpio.h"
#include "esp_log.h"
#include "esp_timer.h"
#include "esp_err.h"

#ifdef __cplusplus
extern "C" {
#endif

// GT911 I2C Configuration
#define GT911_I2C_PORT              I2C_NUM_0
#define GT911_I2C_FREQ_HZ           400000  // 400kHz
#define GT911_I2C_TIMEOUT_MS        100
#define GT911_I2C_ADDRESS           0x5D    // 7-bit address

// GT911 Register Addresses
#define GT911_REG_CONFIG_VERSION    0x8047
#define GT911_REG_CONFIG_CHECKSUM   0x80FF
#define GT911_REG_PRODUCT_ID        0x8140
#define GT911_REG_FIRMWARE_VERSION  0x8144
#define GT911_REG_POINT_INFO        0x814E
#define GT911_REG_POINT_1           0x8150
#define GT911_REG_POINT_2           0x8158
#define GT911_REG_POINT_3           0x8160
#define GT911_REG_POINT_4           0x8168
#define GT911_REG_POINT_5           0x8170

// GT911 Touch Point Structure
typedef struct {
    uint16_t x;
    uint16_t y;
    uint16_t size;
    uint8_t track_id;
    bool pressed;
} gt911_touch_point_t;

// GT911 Touch Data Structure
typedef struct {
    uint8_t touch_count;
    bool large_detect;
    bool buffer_status;
    gt911_touch_point_t points[5];
    uint32_t timestamp;
} gt911_touch_data_t;

// GT911 Configuration Structure
typedef struct {
    i2c_port_t i2c_port;
    gpio_num_t sda_pin;
    gpio_num_t scl_pin;
    gpio_num_t int_pin;
    gpio_num_t rst_pin;
    uint16_t max_x;
    uint16_t max_y;
    bool swap_xy;
    bool invert_x;
    bool invert_y;
} gt911_config_t;

// GT911 Handle
typedef struct {
    gt911_config_t config;
    gt911_touch_data_t touch_data;
    bool initialized;
    uint8_t product_id[4];
    uint16_t firmware_version;
} gt911_handle_t;

// Function Declarations
esp_err_t gt911_init(gt911_handle_t *handle, const gt911_config_t *config);
esp_err_t gt911_deinit(gt911_handle_t *handle);
esp_err_t gt911_read_touch_data(gt911_handle_t *handle);
bool gt911_is_pressed(gt911_handle_t *handle);
uint8_t gt911_get_touch_count(gt911_handle_t *handle);
gt911_touch_point_t gt911_get_touch_point(gt911_handle_t *handle, uint8_t index);
esp_err_t gt911_calibrate(gt911_handle_t *handle);

#ifdef __cplusplus
}
#endif