/*
 * Application Configuration for ESP32-8048S070 Enhanced OBD2 Dashboard
 */

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

// ===== APPLICATION INFORMATION =====
#define APP_NAME                    "Enhanced OBD2 Dashboard"
#define APP_VERSION_MAJOR           1
#define APP_VERSION_MINOR           0
#define APP_VERSION_PATCH           0
#define APP_VERSION_STRING          "1.0.0"
#define APP_BUILD_DATE              __DATE__
#define APP_BUILD_TIME              __TIME__

// ===== HARDWARE CONFIGURATION =====
#define TARGET_BOARD                "ESP32-8048S070"
#define TARGET_MCU                  "ESP32-S3"
#define DISPLAY_SIZE                "7.0 inch"
#define DISPLAY_RESOLUTION          "800x480"
#define COLOR_DEPTH                 15  // 15-bit RGB
#define PSRAM_SIZE_MB               8
#define FLASH_SIZE_MB               16

// ===== TASK CONFIGURATION =====
#define MAIN_TASK_STACK_SIZE        (8 * 1024)
#define MAIN_TASK_PRIORITY          5
#define MAIN_TASK_CORE              0

#define OBD2_TASK_STACK_SIZE        (6 * 1024)
#define OBD2_TASK_PRIORITY          4
#define OBD2_TASK_CORE              0

#define DTC_TASK_STACK_SIZE         (4 * 1024)
#define DTC_TASK_PRIORITY           3
#define DTC_TASK_CORE               1

#define USB_TASK_STACK_SIZE         (4 * 1024)
#define USB_TASK_PRIORITY           2
#define USB_TASK_CORE               0

// ===== TIMING CONFIGURATION =====
#define OBD2_UPDATE_INTERVAL_MS     100   // OBD2 data update rate
#define DTC_CHECK_INTERVAL_MS       30000 // DTC check every 30 seconds
#define UI_REFRESH_INTERVAL_MS      50    // UI refresh rate (20 FPS)
#define STATUS_LOG_INTERVAL_MS      15000 // Status logging every 15 seconds

// ===== MEMORY CONFIGURATION =====
#define LVGL_BUFFER_SIZE            (256 * 1024)  // 256KB for LVGL
#define OBD2_BUFFER_SIZE            (4 * 1024)    // 4KB for OBD2 data
#define DTC_BUFFER_SIZE             (8 * 1024)    // 8KB for DTC data
#define LOG_BUFFER_SIZE             (2 * 1024)    // 2KB for logging

// ===== COMMUNICATION CONFIGURATION =====
#define ELM327_TIMEOUT_MS           5000
#define ELM327_RETRY_COUNT          3
#define USB_DETECTION_TIMEOUT_MS    10000
#define I2C_TIMEOUT_MS              1000

// ===== DISPLAY CONFIGURATION =====
#define BACKLIGHT_DEFAULT_LEVEL     80    // 80% brightness
#define SCREEN_TIMEOUT_MS           300000 // 5 minutes
#define ANIMATION_DURATION_MS       300
#define TOUCH_DEBOUNCE_MS           50

// ===== VEHICLE DETECTION =====
#define VOLTAGE_SAMPLE_COUNT        5
#define VOLTAGE_SAMPLE_INTERVAL_MS  100
#define PROTOCOL_DETECTION_TIMEOUT_MS 5000

// ===== DEBUGGING CONFIGURATION =====
#define ENABLE_DEBUG_LOGGING        1
#define ENABLE_PERFORMANCE_MONITOR  1
#define ENABLE_MEMORY_MONITOR       1
#define ENABLE_TOUCH_DEBUG          0
#define ENABLE_USB_DEBUG            1

// ===== FEATURE FLAGS =====
#define FEATURE_24V_SUPPORT         1
#define FEATURE_J1939_PROTOCOL      1
#define FEATURE_DTC_MANAGEMENT      1
#define FEATURE_VIN_VALIDATION      1
#define FEATURE_SYSTEM_TESTING      1
#define FEATURE_TOUCH_CALIBRATION   1
#define FEATURE_AUTO_DTC_MONITORING 1

// ===== ERROR HANDLING =====
#define MAX_ERROR_COUNT             10
#define ERROR_RESET_THRESHOLD       5
#define WATCHDOG_TIMEOUT_MS         30000

// ===== USB HOST CONFIGURATION =====
#define USB_HOST_STACK_SIZE         (4 * 1024)
#define USB_HOST_PRIORITY           2
#define USB_DEVICE_DETECT_TIMEOUT_MS 5000
#define USB_RECONNECT_DELAY_MS      1000

// ===== LVGL CONFIGURATION =====
#define LVGL_TASK_STACK_SIZE        (8 * 1024)
#define LVGL_TASK_PRIORITY          2
#define LVGL_TASK_CORE              1
#define LVGL_TICK_PERIOD_MS         2
#define LVGL_BUFFER_LINES           100

// ===== CONDITIONAL COMPILATION =====
#ifdef CONFIG_IDF_TARGET_ESP32S3
    #define HAS_PSRAM               1
    #define HAS_USB_OTG             1
    #define HAS_DUAL_CORE           1
#else
    #define HAS_PSRAM               0
    #define HAS_USB_OTG             0
    #define HAS_DUAL_CORE           0
#endif

// ===== HELPER MACROS =====
#define ARRAY_SIZE(arr)             (sizeof(arr) / sizeof((arr)[0]))
#define MIN(a, b)                   ((a) < (b) ? (a) : (b))
#define MAX(a, b)                   ((a) > (b) ? (a) : (b))
#define CLAMP(x, min, max)          (MIN(MAX(x, min), max))

// ===== VERSION HELPERS =====
#define MAKE_VERSION(maj, min, pat) (((maj) << 16) | ((min) << 8) | (pat))
#define APP_VERSION                 MAKE_VERSION(APP_VERSION_MAJOR, APP_VERSION_MINOR, APP_VERSION_PATCH)

#ifdef __cplusplus
}
#endif